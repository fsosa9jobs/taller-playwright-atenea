name: CI - Clonando app y ejecutando test

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:

  test:
    runs-on: ubuntu-latest
    services: 
      mongo:
        image: mongo:6.0
        ports: 
        - 27017:27017

    env: 
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: 6007
      VITE_API_URL: http://localhost:6007/api

    steps:
    - name: Checkout repo actula (con el workflow)
      uses: actions/checkout@v3

    - name: Clonar repo athena redux bank
      run:
        git clone https://github.com/fsosa9jobs/redux-athena-bank.gitt app             

    - name: Crear archivo .env para backend
      run: |
          
          echo "MONGO_url: ${{ env.MONGO_URI }}" > app/backend/.env
          echo "JWT_SECRET: ${{ env.JWT_SECRET }}" > app/backend/.env
          echo "PORT: 6007" > app/backend/.env
          echo "VITE_API_URL: ${{ env.VITE_API_URL }}" > app/backend/.env

    - name: Instalar dependencias de backend
      run: |
        cd app/backend
        npm install

    - name: Construir backend
      run: |
        cd app/backend
        npm run dev > backend.log 2>&1 &
    
    #se instala la herramienta wait-on globalmente
    - name: Instalar wait-on
      run: npm install -g wait-on

    #esperar que el backend se levnte ne le puerto 6007
    - name: esperando backend
      run : wait-on tcp:6007

    #instalar dependencias del frontend
    - name: instalar dependencias frontend
      run: |
        cd app/frontend
        npm install
      env: 
        VITE_API_URL: ${{ env.VITE_API_URL}}

    - name: Construir backfrontendend
      run: |
        cd app/frontend
        npm run dev > frontend.log 2>&1 &

    #esperar que se levante el fron
    - name: esperando frontend
      run : wait-on http://localhost:3000

    #empezr a ejecutar las pruebas
    - name: Instalr y ejecutar pruebas
      run: |
        cd tests
        npm install
        npx playwright install
        npx playwright test --reporter=html

    - name: Guardar reportes como artefactos
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path:  ./playwright-report



      


